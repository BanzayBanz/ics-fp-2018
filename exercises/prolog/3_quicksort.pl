% Определить предикат qsort(L, K) который для заданного списка целых чисел возвращает отсортированный 

% Определим такой метод, который позволил бы распределять значения из подсписка X в левую или правую часть целевого подсписка относительно какого-то контрольного значения Y. Такой метод будет обозначать один прогон qsort.
% part/4: ([X|Xs], Y, Ls, Rs) - исходный подсписок, контрольное значение, левый и правый части целевого подсписка

part([], Y, [], []).
part([X|Xs], Y, [X|Ls], Rs) :- X < Y,  part(Xs, Y, Ls, Rs).
part([X|Xs], Y, Ls, [X|Rs]) :- X >= Y, part(Xs, Y, Ls, Rs).

% Результат прогона нужно собрать в один подсписок.
% merge/3: (Ls, [X|Rs], Ys) - левая часть, контрольное значение и правая часть, целевой подсписок

merge([],Ys,Ys).
merge([X|Xs],Ys,[X|Zs]) :- merge(Xs,Ys,Zs).

% Рекурсивно разобьём список и произведём прогон по нему. Контрольным значением будет первый элемент подсписка.

qsort([], []).
qsort([L|Ls], K) :-
    part(Ls, L, Left, Right),
    qsort(Left, Lres), qsort(Right, Rres),
    merge(Lres, [L|Rres], K).

% Тесты:

% ?- qsort([1, 7, 4, 8, -2, -6, -9, 0], K).
% K = [-9, -6, -2, 0, 1, 4, 7, 8].

% ?- qsort([5], K).
% K = [5].

% ?- qsort([], K).
% K = [].

